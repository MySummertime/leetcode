1. use 1 array to simulate 3 stacks;



  we use a one-dimensional array
  
  
  /**
   * Your TripleInOne object will be instantiated and called as such:
   * TripleInOne* obj = new TripleInOne(stackSize);
   * obj->push(stackNum,value);
   * int param_2 = obj->pop(stackNum);
   * int param_3 = obj->peek(stackNum);
   * bool param_4 = obj->isEmpty(stackNum);
  **/
  
  class TripleInOne {
  public:
      TripleInOne(int stackSize) {
          st = new int [stackSize * 3];
          arr[0] = 0;
          arr[1] = stackSize;
          arr[2] = stackSize * 2;
          len = stackSize;
      }

      void push(int stackNum, int value) {
          if (arr[stackNum] == (1 + stackNum) * len) {
              return;
          }
          st[arr[stackNum]++] = value;
      }

      int pop(int stackNum) {
          if (arr[stackNum] == stackNum * len) {
              return -1;
          }
          return st[--arr[stackNum]];
      }

      int peek(int stackNum) {
          if (arr[stackNum] == stackNum * len) {
              return -1;
          }
          return st[arr[stackNum] - 1];
      }

      bool isEmpty(int stackNum) {
          return arr[stackNum] == stackNum * len;
      }

  private:
      int *st;
      int arr[3];
      int len;
  };
