construct the ParkingSystem class:

  1. use ParkingSystem(int big, int medium, int small) to initialize the object of this object;
  2. the number of slots for each parking space are given as part of the constructor.
  3. use bool addCar(int carType) to check whether there's a parking space of carType for the car that wants to get into the parking lot. 
  4. carType can be of three kinds: big, medium, or small, which are represented by 1, 2, and 3 respectively. 
  5. A car can only park in a parking space of its carType. If there is no space available, return false, else park the car in that size space and return true.
  
  we use a const int fakeType to simulate a place holder so that we don't need to substract 1 before we access array elements any time;
  
  /**
   * Your ParkingSystem object will be instantiated and called as such:
   * ParkingSystem* obj = new ParkingSystem(big, medium, small);
   * bool param_1 = obj->addCar(carType);
   */
   
  class ParkingSystem {
  public:
      ParkingSystem(int big, int medium, int small){
          park = {fakeType, big, medium, small};
      }

      bool addCar(int carType) {
          return park[carType]-- > 0;
      }

  private:
      const int fakeType = 0;
      vector<int> park;

  };
