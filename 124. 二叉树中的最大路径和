use bfs algorithm by recursion


  /**
   * Definition for a binary tree node.
   * struct TreeNode {
   *     int val;
   *     TreeNode *left;
   *     TreeNode *right;
   *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
   *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
   *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
   * };
   */

  class Solution {
  public:
      int maxPathSum(TreeNode* root) {
          dfs(root);
          return ans;
      }

  private:
      int dfs(TreeNode* root) {
          if (root == nullptr) {
              return 0;
          }
          int left = dfs(root->left);
          int right = dfs(root->right);
          int innerSum = root->val + max(0, left) + max(0, right);
          ans = max(ans, innerSum);
          int curMax = root->val + max(left, right);
          return max(0, curMax);
      }
  private:
      int ans = INT32_MIN;
  };
