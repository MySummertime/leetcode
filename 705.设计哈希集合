using 1 big array that constructed by sub-arrays;

  1. use a big array to store the key of hash-pair;
  2. use sub-array to construct lists that store the values of hash-pair;
  

  /**
   * Your MyHashSet object will be instantiated and called as such:
   * MyHashSet obj = new MyHashSet();
   * obj.add(key);
   * obj.remove(key);
   * boolean param_3 = obj.contains(key);
  **/
  
  class MyHashSet {
      public MyHashSet() {
          int[] arr = new int[40000];
      }

      public void add(int key) {
          int bucidx = key / 32;
          int bitidx = key % 32;
          setVal(bucidx, bitidx, true);
      }

      public void remove(int key) {
          int bucidx = key / 32;
          int bitidx = key % 32;
          setVal(bucidx, bitidx, false);
      }

      public boolean contains(int key) {
          int bucidx = key / 32;
          int bitidx = key % 32;
          getVal(bucidx, bitidx);
      }

      void setVal(int bucket, int idx, boolean flag) {
          if (flag) {
              int tmp = arr[bucket] | (1 << idx);
              arr[bucket] = tmp;
          }
          else {
              int tmp = arr[bucket] & ~(1 << idx);
              arr[bucket] = tmp;
          }
      }

      boolean getVal(int bucket, int idx) {
          int tmp = (arr[bucket] >> idx) & 1;
          return tmp == 1;
      }
      
  }
