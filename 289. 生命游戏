simple, just figure out the transform from a state to another state


  class Solution {
  public:
      void gameOfLife(vector<vector<int>>& board) {
          const int h = board.size();
          const int w = board[0].size();
          for (int i = 0; i < h; ++i) {
              for (int j = 0; j < w; ++j) {
                  if (board[i][j] % 10 == 1) {
                      transfer(board, h, w, i, j);
                  }
              }
          }
          for (int i = 0; i < h; ++i) {
              for (int j = 0; j < w; ++j) {
                  rollback(board, i, j);
              }
          }
      }

  public:
      void transfer(vector<vector<int>>& vec, int h, int w, int i, int j) {
          int xArr[] = {i - 1, i, i + 1};
          int yArr[] = {j - 1, j, j + 1};
          for (int x : xArr) {
              for (int y : yArr) {
                  if (x < 0 || x >= h || y < 0 || y >= w || (x == i && y == j)) {}
                  else {
                      vec[x][y] += 10;
                  }
              }
          }
      }

      void rollback(vector<vector<int>>& vec, int i, int j) {
          int tmp = vec[i][j];
          if (tmp / 10 == 3) {
              vec[i][j] = 1;
          }
          else if (tmp / 10 == 2 && tmp % 10 == 1) {
              vec[i][j] = 1;
          }
          else {
              vec[i][j] = 0;
          }
      }
  };
