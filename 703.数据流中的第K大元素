use heap to store the largest k elements of data flow which is capable of returning the Kth element of all


  we import the lib heapq that provide functions for heap operations;
  
  

  # Your KthLargest object will be instantiated and called as such:
  # obj = KthLargest(k, nums)
  # param_1 = obj.add(val)
  class KthLargest:

      def __init__(self, k: int, nums: List[int]):
          self.k = k
          self.heap = nums
          heapq.heapify(self.heap)

      def add(self, val: int) -> int:
          heapq.heappush(self.heap, val)
          while len(self.heap) > self.k:
              heapq.heappop(self.heap)
          return self.heap[0]
