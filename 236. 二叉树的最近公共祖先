use bfs algorithm by recursion


  /**
   * Definition for a binary tree node.
   * struct TreeNode {
   *     int val;
   *     TreeNode *left;
   *     TreeNode *right;
   *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
   * };
   */

  class Solution {
  public:
      TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
          return bfs(root, p, q) ? ans : nullptr;
      }

  private:
      bool bfs(TreeNode* _root, TreeNode* _p, TreeNode* _q) {
          if (!_root) {
              return 0;
          }
          bool left = bfs(_root->left, _p, _q);
          bool right = bfs(_root->right, _p, _q);
          if ((left && right) || ((_root->val == _p->val || _root->val == _q->val) && (left || right))) {
              ans = _root;
          }
          return left || right || (_root->val == _p->val || _root->val == _q->val);
      }
  private:
      TreeNode* ans;
  };
