671. Second Minimum Node In a Binary Tree

/**
 * Definition for a binary tree node.
 * struct TreeNode{
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution{
public:
    int findSecondMinimumValue(TreeNode* root){
        if(!root || !root->left || !root->right){
            return -1;
        }
        int left = root->left->val;
        int right = root->right->val;
        if(root->val == root->left->val){
            left = findSecondMinimumValue(root->left);
        }
        if(root->val == root->right->val){
            right = findSecondMinimumValue(root->right);
        }
        if(root->val == left && root->val == right){
            return -1;
        }

        int mi = min(left, right);
        if(root->val < mi){
            return mi;
        }
        else{
            return max(left, right);
        }
    }
};
